Problem Statement: Given an array, find the second smallest and second largest element in the array. Print ‘-1’ in the event that either of them doesn’t exist.

Example 1:
Input: [1,2,4,7,7,5]
Output: Second Smallest : 2
	Second Largest : 5
Explanation: The elements are as follows 1,2,3,5,7,7 and hence second largest of these is 5 and second smallest is 2

Example 2:
Input: [1]
Output: Second Smallest : -1
	Second Largest : -1
Explanation: Since there is only one element in the array, it is the largest and smallest element present in the array. There is no second largest or second smallest element present.

//Code starts from here

#include <iostream>
#include<bits/stdc++.h>

using namespace std;

int secondLargest(int arr[], int n)
{
    int Largest = INT_MIN, sLargest=-1;
    int i,j;

    for (i=0; i<n; i++)
    {
        if (arr[i]>Largest) Largest=arr[i];
    }
    
    for(j=0; j<n; j++)
    {
        if (arr[j]>Largest)
        {
            sLargest=Largest;
            Largest=arr[i];
        }
        else if(arr[j]>sLargest && arr[j]!=Largest)
        {
            sLargest=arr[j];
        }
    }
    
    return sLargest;
    
    // return sLargest; 
}
    

int main()
{
    int arr[] = {1,2,21,-5,7,5};
    int n = sizeof(arr)/sizeof(arr[0]);
    cout<<secondLargest(arr,n);
    return 0;
}

//Code ends here
